---
title: "Homework 3"
format: pdf
author: "GONG Kuiyuan"
bibliography: references.bib
csl: apa-numeric-superscript-brackets.csl
---

Student ID: 39-246182

Student name: GONG Kuiyuan

Preferred name: Eddie

## Answers:

**Task 1**: The assigned value of `x` will not be printed down because of `#| eval: false`. If we adjust `#| eval: false` into `#| eval: true`, then the code chunk will run as normal.

```{r}
#| eval: false
x <- "No evaluation"
print(x)
```

**Task 2**: The code chunk option `#| eval: false` allows us to check whether the code above actually runs or not. Additionally, if we delete the option `#| eval: false`, we cannot render the quarto file because of `error`. The option allows us to run the chunk with the presence of `error`.

```{r}
#| error: true
print(x)
```

**Task 3**: The option `#| echo: false` makes the code and process invisible but only presents the result.

```{r}
#| echo: false

y <- "Hello World"
print(y)
```

**Task 4**:

```{r}
x <- 3
y <- 4 
# I first input the values of x and y in the global environment in order to call them in the paragraph.
```

Tony and Lisa are students in Grade 2. Today, they learned some basic mathematics from their teacher. The teacher gave them an after-class exercise, which is to calculate the result of "x + y", where x = 3 and y = 4. The result is `r x + y`.

**Task 5**: Everything turns into invisible in the pdf file, including the code chunk and result.

```{r}
#| include: false
x <- 3
y <- 4
z <- x + y
print (z)
```

**Task 6**:

```{r}
new_func <- function(x, y ,z){ 
  # I defined a new function called new_func with three arguments.
  result <- x^y + y^z + z^x / x^x 
  # I defined the main body of the function and assigned it to "result".
  return(result)
  # Inputting the main body into "result" is not necessary.
}

new_func(1, 2, 3) # We can derive the result by passing values of arguments.
```

**Task 7**: Hi, guys. I found this wonderful paper published on Journal of Human Resources. I found the research finding is very interesting [@HAWKINSON2013388]. The results suggest large impacts on cognitive skills from expanding Head Start to current noneligibles and negligible impacts of subsidies on cognitive skills of current eligibles [@Griffen604].

**Task 8**: I added a header called References at the end of this document. Let's jump into the answer for Task 9.

**Task 9**: I have added `csl: apa-numeric-superscript-brackets.csl` to YAML header. Unfortunately, the csl file makes the author name and the year of publication disappeared. Sorry, Professor Griffen, I didn't mean to do so.

**Task 10**: I chose the one `apa-numeric-superscript-brackets.csl` because this one is very concise in the paragraphs, it only shows the number of paper and ignores the author name and year of publication. It is more convenient for me to navigate the paper I want.

**Task 11**: There are many different csl files because different agencies may adopt different formats of citation. For example, different universities and journals. I was asked to use the above style of citation in my undergraduate study.

**Task 12**:

```{r}
list1 <- list(
  n = "Hello", "Goodbye",
  m = "Morning", "Evening"
)

list2 <- list(
  j = list1,
  k = "Happy", "Sad"
)

list2[[1]] # This can show all elements of list1 in list2.
list2[[1]][1] # Since there four elements in list1, this shows the first one in it.
```
**Task 13**:

```{r}
library(pacman)
p_load(palmerpenguins)

peng_reg <- lm(bill_length_mm ~ bill_depth_mm, penguins)
```

**Task 14**:

```{r}
peng_reg$coefficients[1] # Using this can make it easy to access each term of the coefficients.
peng_reg$coefficients[2]
# We can also adjust it to other elements of the list.
peng_reg$residuals[1]
```

**Task 15**: The type of `peng_reg$qr` is `list`. Note that `peng_reg` is a list as well. Therefore, the situation is similar with `list1` and `list2` because they are both list within another list. We can use the above code to precisely acquire the element we want.
```{r}
typeof(peng_reg$qr)
typeof (peng_reg)
```

## References
