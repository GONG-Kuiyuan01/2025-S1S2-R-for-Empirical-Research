cd <- function(K, L, theta = 2/3, A = 1){
A*(K^theta)*(L^(1-theta))
}
@keywords production function
use_mit_license()
install.packages("usethis")
library(usethis)
install.packages("usethis")
library(usethis)
install.packages("usethis")
library(usethis)
use_mit_license()
document()
devtools::document()
check()
devtools::check()
library(pacman)
p_load(devtools)
install("growth")
install("growth")
install("My R code/growth")
install("/Users/edisonkung/desktop/R for empirical research/My R code/growth")
ui <- fluidPage(
titlePanel("Palmer Penguins"),
sidebarLayout(
sidebarPanel(
selectInput(
inputID = "island",
lable = "Island",
choices = c("Trogersen", "Biscoe", "Dream")
),
mainPanel(
plotOutput("plot")
)
)
)
)
library(pacman)
p_load(shiny, griffendata, tidyverse, class, devtools)
ui <- fluidPage(
titlePanel("Palmer Penguins"),
sidebarLayout(
sidebarPanel(
selectInput(
inputID = "island",
lable = "Island",
choices = c("Trogersen", "Biscoe", "Dream")
),
mainPanel(
plotOutput("plot")
)
)
)
)
ui <- fluidPage(
numericInput(
inputId = "N",
lable = "N",
value = 100
),
textOutput("double")
)
library(pacman)
p_load(shiny, griffendata, tidyverse, class, devtools)
ui <- fluidPage(
titlePanel("Palmer Penguins"),
sidebarLayout(
sidebarPanel(
selectInput(
inputID = "island",
lable = "Island",
choices = c("Trogersen", "Biscoe", "Dream")
),
mainPanel(
plotOutput("plot")
)
)
)
)
library(pacman)
p_load(shiny, griffendata, tidyverse, class, devtools, palmerpenguins)
ui <- fluidPage(
titlePanel("Palmer Penguins"),
sidebarLayout(
sidebarPanel(
selectInput(
inputID = "island",
lable = "Island",
choices = c("Trogersen", "Biscoe", "Dream")
),
mainPanel(
plotOutput("plot")
)
)
)
)
ui <- fluidPage(
titlePanel("Palmer Penguins"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "island",
lable = "Island",
choices = c("Trogersen", "Biscoe", "Dream")
),
mainPanel(
plotOutput("plot")
)
)
)
)
ui <- fluidPage(
titlePanel("Palmer Penguins"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "island",
label = "Island",
choices = c("Trogersen", "Biscoe", "Dream")
),
mainPanel(
plotOutput("plot")
)
)
)
)
ui <- fluidPage(
titlePanel("Palmer Penguins"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "island",
label = "island",
choices = c("Trogersen", "Biscoe", "Dream")
),
mainPanel(
plotOutput("plot")
)
)
)
)
ui <- fluidPage(
titlePanel("Palmer Penguins"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "island",
label = "island",
choices = c("Trogersen", "Biscoe", "Dream")
),
mainPanel(
plotOutput("plot")
)
)
)
)
ui <- fluidPage(
titlePanel("Palmer Penguins"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "island",
label = "Island",
choices = c("Torgersen", "Biscoe", "Dream")
)
),
mainPanel(
plotOutput("plot")
)
)
)
server <- function(input, output, session){
data <- reactive(
{
dplyr::filter(penguins, island == input$island)
})
output$plot <- renderPlot({
data() |>
ggplot(
aes(bill_length_mm, body_mass_g)
) +
geom_point() +
labs(
x = "Bill length (mm)",
y = "Body mass (g)"
)
}
)
}
shinyApp(ui, server)
